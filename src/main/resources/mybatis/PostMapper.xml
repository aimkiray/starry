<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sinitial.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.sinitial.domain.Post">
    <id column="post_id" jdbcType="INTEGER" property="postId" />
    <result column="post_title" jdbcType="VARCHAR" property="postTitle" />
    <result column="post_status" jdbcType="VARCHAR" property="postStatus" />
    <result column="post_type" jdbcType="VARCHAR" property="postType" />
    <result column="post_mime_type" jdbcType="VARCHAR" property="postMimeType" />
    <result column="post_date" jdbcType="TIMESTAMP" property="postDate" />
    <association property="author" resultMap="AuthorResult" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.sinitial.domain.Post">
    <result column="post_content" jdbcType="LONGVARCHAR" property="postContent" />
  </resultMap>
  <resultMap id="AuthorResult" type="com.sinitial.domain.Author">
    <id column="author_id" jdbcType="INTEGER" property="authorId" />
    <result column="author_name" jdbcType="VARCHAR" property="authorName" />
    <result column="author_date" jdbcType="TIMESTAMP" property="authorDate" />
    <result column="author_info" jdbcType="VARCHAR" property="authorInfo" />
    <result column="author_password" jdbcType="VARCHAR" property="authorPassword" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="headshot" jdbcType="VARCHAR" property="headshot" />
  </resultMap>
  <sql id="Base_Column_List">
    post_id, post_title, post_status, post_type, post_mime_type, post_date, author_id, author_name, author_date, author_info, author_password, nick_name, headshot
  </sql>
  <sql id="Blob_Column_List">
    post_content
  </sql>
  <select id="selectBySearch" parameterType="map" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sl_post
    LEFT JOIN sinitial.sl_author
    ON sinitial.sl_post.post_author = sinitial.sl_author.author_id
    where 1=1
    <if test="searchParam != null and searchParam != ''">
      and (post_title like concat('%',#{searchParam},'%')
      or post_content like concat('%',#{searchParam},'%'))
    </if>
    LIMIT #{start},#{limit}
  </select>
  <!--&lt;select id="selectBySearch" parameterType="map" resultMap="ResultMapWithBLOBs"&gt;
    select
    &lt;include refid="Base_Column_List"/&gt;
    ,
    &lt;include refid="Blob_Column_List"/&gt;
    from sl_post
    LEFT JOIN sinitial.sl_author
    ON sinitial.sl_post.post_author = sinitial.sl_author.author_id
    where 1=1
    &lt;if test="post != null and post.postTitle != null"&gt;
      and post_title like concat('%',#{post.postTitle},'%')
    &lt;/if&gt;
    &lt;if test="post != null and post.postContent != null"&gt;
      and post_content like concat('%',#{post.postContent},'%')
    &lt;/if&gt;
    LIMIT #{start},#{limit}
  &lt;/select&gt;-->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sl_post
    LEFT JOIN sinitial.sl_author ON sinitial.sl_post.post_author = sinitial.sl_author.author_id
    where post_id = #{postId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM sl_post
    WHERE post_id = #{postId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sinitial.domain.Post">
    INSERT INTO sl_post (post_id, post_title, post_status,
                         post_type, post_author, post_mime_type,
                         post_date, post_content)
    VALUES (#{postId,jdbcType=INTEGER}, #{postTitle,jdbcType=VARCHAR}, #{postStatus,jdbcType=VARCHAR},
            #{postType,jdbcType=VARCHAR}, #{author.authorId,jdbcType=INTEGER}, #{postMimeType,jdbcType=VARCHAR},
            #{postDate,jdbcType=TIMESTAMP}, #{postContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sinitial.domain.Post">
    insert into sl_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        post_id,
      </if>
      <if test="postTitle != null">
        post_title,
      </if>
      <if test="postStatus != null">
        post_status,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="author != null and author.authorId != null">
        post_author,
      </if>
      <if test="postMimeType != null">
        post_mime_type,
      </if>
      <if test="postDate != null">
        post_date,
      </if>
      <if test="postContent != null">
        post_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="postTitle != null">
        #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postStatus != null">
        #{postStatus,jdbcType=VARCHAR},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=VARCHAR},
      </if>
      <if test="author != null and author.authorId != null">
        #{author.authorId,jdbcType=INTEGER},
      </if>
      <if test="postMimeType != null">
        #{postMimeType,jdbcType=VARCHAR},
      </if>
      <if test="postDate != null">
        #{postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="postContent != null">
        #{postContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sinitial.domain.Post">
    update sl_post
    <set>
      <if test="postTitle != null">
        post_title = #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postStatus != null">
        post_status = #{postStatus,jdbcType=VARCHAR},
      </if>
      <if test="postType != null">
        post_type = #{postType,jdbcType=VARCHAR},
      </if>
      <if test="author != null and author.authorId != null">
        post_author = #{author.authorId,jdbcType=INTEGER},
      </if>
      <if test="postMimeType != null">
        post_mime_type = #{postMimeType,jdbcType=VARCHAR},
      </if>
      <if test="postDate != null">
        post_date = #{postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="postContent != null">
        post_content = #{postContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.sinitial.domain.Post">
    UPDATE sl_post
    SET post_title   = #{postTitle,jdbcType=VARCHAR},
      post_status    = #{postStatus,jdbcType=VARCHAR},
      post_type      = #{postType,jdbcType=VARCHAR},
      post_author    = #{author.authorId,jdbcType=INTEGER},
      post_mime_type = #{postMimeType,jdbcType=VARCHAR},
      post_date      = #{postDate,jdbcType=TIMESTAMP},
      post_content   = #{postContent,jdbcType=LONGVARCHAR}
    WHERE post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sinitial.domain.Post">
    UPDATE sl_post
    SET post_title   = #{postTitle,jdbcType=VARCHAR},
      post_status    = #{postStatus,jdbcType=VARCHAR},
      post_type      = #{postType,jdbcType=VARCHAR},
      post_author    = #{author.authorId,jdbcType=INTEGER},
      post_mime_type = #{postMimeType,jdbcType=VARCHAR},
      post_date      = #{postDate,jdbcType=TIMESTAMP}
    WHERE post_id = #{postId,jdbcType=INTEGER}
  </update>
</mapper>