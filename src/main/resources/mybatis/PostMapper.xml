<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.starry.dao.PostMapper">
  <resultMap id="BaseResultMap" type="com.starry.domain.Post">
    <id column="the_post" jdbcType="INTEGER" property="postId" />
    <result column="post_title" jdbcType="VARCHAR" property="postTitle" />
    <result column="post_status" jdbcType="VARCHAR" property="postStatus" />
    <result column="post_author" jdbcType="INTEGER" property="postAuthor" />
    <result column="post_mime_type" jdbcType="VARCHAR" property="postMimeType" />
    <result column="post_date" jdbcType="TIMESTAMP" property="postDate" />
    <result column="post_type" jdbcType="VARCHAR" property="postType" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.starry.domain.Post">
    <result column="post_content" jdbcType="LONGVARCHAR" property="postContent" />
  </resultMap>

  <resultMap id="SuperResultMap" type="com.starry.domain.Post">
    <id column="the_post" jdbcType="INTEGER" property="postId" />
    <result column="post_title" jdbcType="VARCHAR" property="postTitle" />
    <result column="post_status" jdbcType="VARCHAR" property="postStatus" />
    <result column="post_author" jdbcType="INTEGER" property="postAuthor" />
    <result column="post_mime_type" jdbcType="VARCHAR" property="postMimeType" />
    <result column="post_date" jdbcType="TIMESTAMP" property="postDate" />
    <result column="post_type" jdbcType="VARCHAR" property="postType" />
    <association property="user" resultMap="UserResultMap" />
    <collection property="tags" javaType="java.util.List" ofType="com.starry.domain.Tag" >
      <id column="the_tag" jdbcType="INTEGER" property="tagId" />
      <result column="tag_name" jdbcType="VARCHAR" property="tagName" />
    </collection>
  </resultMap>
  <resultMap id="UserResultMap" type="com.starry.domain.User">
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_password" jdbcType="VARCHAR" property="userPassword" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="gender" jdbcType="INTEGER" property="gender" />
    <result column="sign_date" jdbcType="TIMESTAMP" property="signDate" />
    <result column="user_role" jdbcType="INTEGER" property="userRole" />
    <result column="user_info" jdbcType="VARCHAR" property="userInfo" />
    <result column="headshot" jdbcType="VARCHAR" property="headshot" />
  </resultMap>
  <resultMap extends="SuperResultMap" id="SuperResultMapWithBLOBs" type="com.starry.domain.Post">
    <result column="post_content" jdbcType="LONGVARCHAR" property="postContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    post_id, post_title, post_status, post_author, post_mime_type, post_date, post_type, user_id, user_name, user_password, nick_name, email, gender, sign_date, user_role,
    user_info, headshot, tag_id, tag_name
  </sql>
  <sql id="Super_Column_List">
    sl_post.post_id as the_post, post_title, post_status, post_author, post_mime_type, post_date, post_type, sl_tag.tag_id as the_tag, tag_name, post_tag_id, sl_post_tag.post_id AS relation_post, sl_post_tag.tag_id AS relation_tag, user_id, user_name, user_password, nick_name, email, gender, sign_date, user_role, user_info, headshot
  </sql>
  <sql id="User_Column_List">
    user_id, user_name, user_password, nick_name, email, gender, sign_date, user_role,
    user_info, headshot
  </sql>
  <sql id="Blob_Column_List">
    post_content
  </sql>

  <!--简洁的文章搜索功能（多此一举）-->
  <!--为解决一对多重复数据-->
  <!--先对主表分页，再进行关联查询-->
  <select id="selectBySearch" parameterType="map" resultMap="SuperResultMapWithBLOBs">
    SELECT
    the_post, post_title, post_status, post_author, post_mime_type, post_date, post_type, post_content, sl_tag.tag_id as the_tag, tag_name, post_tag_id, sl_post_tag.post_id AS relation_post, sl_post_tag.tag_id AS relation_tag, user_id, user_name, user_password, nick_name, email, gender, sign_date, user_role, user_info, headshot
    FROM (select
    sl_post.post_id as the_post, post_title, post_status, post_author, post_mime_type, post_date, post_type, post_content
    from sl_post
    ORDER BY the_post DESC
    LIMIT #{start},#{limit}) page
    LEFT JOIN sl_post_tag ON the_post = sl_post_tag.post_id
    LEFT JOIN sl_tag ON sl_tag.tag_id = sl_post_tag.tag_id
    LEFT JOIN sl_user ON page.post_author = sl_user.user_id
    WHERE 1=1
    <if test="searchParam != null and searchParam != ''">
      and (post_title like concat('%',#{searchParam},'%')
      or post_content like concat('%',#{searchParam},'%'))
    </if>
  </select>

  <!--获取文章总数-->
  <select id="count" resultType="int">
    SELECT count(*) FROM sinitial.sl_post
  </select>

  <select id="selectByExampleWithBLOBs" parameterType="com.starry.domain.PostExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sl_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.starry.domain.PostExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sl_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="SuperResultMapWithBLOBs">
    select 
    <include refid="Super_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sl_post
    LEFT JOIN sl_post_tag ON sl_post.post_id = sl_post_tag.post_id
    LEFT JOIN sl_tag ON sl_tag.tag_id = sl_post_tag.tag_id
    LEFT JOIN sl_user ON sl_post.post_author = sl_user.user_id
    where sl_post.post_id = #{postId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sl_post
    where post_id = #{postId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.starry.domain.PostExample">
    delete from sl_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.starry.domain.Post">
    insert into sl_post (post_id, post_title, post_status, 
      post_author, post_mime_type, post_date, 
      post_type, post_content)
    values (#{postId,jdbcType=INTEGER}, #{postTitle,jdbcType=VARCHAR}, #{postStatus,jdbcType=VARCHAR}, 
      #{postAuthor,jdbcType=INTEGER}, #{postMimeType,jdbcType=VARCHAR}, #{postDate,jdbcType=TIMESTAMP}, 
      #{postType,jdbcType=VARCHAR}, #{postContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.starry.domain.Post">
    insert into sl_post
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        post_id,
      </if>
      <if test="postTitle != null">
        post_title,
      </if>
      <if test="postStatus != null">
        post_status,
      </if>
      <if test="postAuthor != null">
        post_author,
      </if>
      <if test="postMimeType != null">
        post_mime_type,
      </if>
      <if test="postDate != null">
        post_date,
      </if>
      <if test="postType != null">
        post_type,
      </if>
      <if test="postContent != null">
        post_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="postId != null">
        #{postId,jdbcType=INTEGER},
      </if>
      <if test="postTitle != null">
        #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postStatus != null">
        #{postStatus,jdbcType=VARCHAR},
      </if>
      <if test="postAuthor != null">
        #{postAuthor,jdbcType=INTEGER},
      </if>
      <if test="postMimeType != null">
        #{postMimeType,jdbcType=VARCHAR},
      </if>
      <if test="postDate != null">
        #{postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="postType != null">
        #{postType,jdbcType=VARCHAR},
      </if>
      <if test="postContent != null">
        #{postContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.starry.domain.PostExample" resultType="java.lang.Long">
    select count(*) from sl_post
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sl_post
    <set>
      <if test="record.postId != null">
        post_id = #{record.postId,jdbcType=INTEGER},
      </if>
      <if test="record.postTitle != null">
        post_title = #{record.postTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.postStatus != null">
        post_status = #{record.postStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.postAuthor != null">
        post_author = #{record.postAuthor,jdbcType=INTEGER},
      </if>
      <if test="record.postMimeType != null">
        post_mime_type = #{record.postMimeType,jdbcType=VARCHAR},
      </if>
      <if test="record.postDate != null">
        post_date = #{record.postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.postType != null">
        post_type = #{record.postType,jdbcType=VARCHAR},
      </if>
      <if test="record.postContent != null">
        post_content = #{record.postContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update sl_post
    set post_id = #{record.postId,jdbcType=INTEGER},
      post_title = #{record.postTitle,jdbcType=VARCHAR},
      post_status = #{record.postStatus,jdbcType=VARCHAR},
      post_author = #{record.postAuthor,jdbcType=INTEGER},
      post_mime_type = #{record.postMimeType,jdbcType=VARCHAR},
      post_date = #{record.postDate,jdbcType=TIMESTAMP},
      post_type = #{record.postType,jdbcType=VARCHAR},
      post_content = #{record.postContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sl_post
    set post_id = #{record.postId,jdbcType=INTEGER},
      post_title = #{record.postTitle,jdbcType=VARCHAR},
      post_status = #{record.postStatus,jdbcType=VARCHAR},
      post_author = #{record.postAuthor,jdbcType=INTEGER},
      post_mime_type = #{record.postMimeType,jdbcType=VARCHAR},
      post_date = #{record.postDate,jdbcType=TIMESTAMP},
      post_type = #{record.postType,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.starry.domain.Post">
    update sl_post
    <set>
      <if test="postTitle != null">
        post_title = #{postTitle,jdbcType=VARCHAR},
      </if>
      <if test="postStatus != null">
        post_status = #{postStatus,jdbcType=VARCHAR},
      </if>
      <if test="postAuthor != null">
        post_author = #{postAuthor,jdbcType=INTEGER},
      </if>
      <if test="postMimeType != null">
        post_mime_type = #{postMimeType,jdbcType=VARCHAR},
      </if>
      <if test="postDate != null">
        post_date = #{postDate,jdbcType=TIMESTAMP},
      </if>
      <if test="postType != null">
        post_type = #{postType,jdbcType=VARCHAR},
      </if>
      <if test="postContent != null">
        post_content = #{postContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.starry.domain.Post">
    update sl_post
    set post_title = #{postTitle,jdbcType=VARCHAR},
      post_status = #{postStatus,jdbcType=VARCHAR},
      post_author = #{postAuthor,jdbcType=INTEGER},
      post_mime_type = #{postMimeType,jdbcType=VARCHAR},
      post_date = #{postDate,jdbcType=TIMESTAMP},
      post_type = #{postType,jdbcType=VARCHAR},
      post_content = #{postContent,jdbcType=LONGVARCHAR}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.starry.domain.Post">
    update sl_post
    set post_title = #{postTitle,jdbcType=VARCHAR},
      post_status = #{postStatus,jdbcType=VARCHAR},
      post_author = #{postAuthor,jdbcType=INTEGER},
      post_mime_type = #{postMimeType,jdbcType=VARCHAR},
      post_date = #{postDate,jdbcType=TIMESTAMP},
      post_type = #{postType,jdbcType=VARCHAR}
    where post_id = #{postId,jdbcType=INTEGER}
  </update>
</mapper>